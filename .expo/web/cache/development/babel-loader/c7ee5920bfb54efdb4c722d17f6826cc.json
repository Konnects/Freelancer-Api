{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Freelancer-Api\\\\component\\\\Mainmenu.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport App from \"../App\";\nimport ListCon from \"./ListCon\";\nimport { Icon } from 'native-base';\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nvar Mainmenu = function (_Component) {\n  _inherits(Mainmenu, _Component);\n\n  var _super = _createSuper(Mainmenu);\n\n  function Mainmenu(props) {\n    var _this;\n\n    _classCallCheck(this, Mainmenu);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      disconnect: false\n    };\n    return _this;\n  }\n\n  _createClass(Mainmenu, [{\n    key: \"ListStackScreen\",\n    value: function ListStackScreen() {\n      var _this2 = this;\n\n      return React.createElement(Stack.Navigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"List\",\n        component: ListCon,\n        options: {\n          headerTitleAlign: 'center',\n          headerRight: function headerRight() {\n            return React.createElement(Icon, {\n              name: \"md-log-out\",\n              onPress: function onPress() {\n                _this2.setState({\n                  disconnect: true\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 25\n              }\n            });\n          },\n          headerStatusBarHeight: 5,\n          headerStyle: {\n            backgroundColor: '#041a48'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Connexion\",\n        component: App,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.disconnect) {\n        return React.createElement(App, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 16\n          }\n        });\n      } else {\n        return React.createElement(NavigationContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }\n        }, React.createElement(Tab.Navigator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }\n        }, React.createElement(Tab.Screen, {\n          name: \"List\",\n          options: {\n            headerTransparent: true,\n            tabBarLabel: 'List',\n            tabBarIcon: function tabBarIcon(_ref) {\n              var color = _ref.color,\n                  size = _ref.size;\n              return React.createElement(MaterialCommunityIcons, {\n                name: \"view-list\",\n                color: color,\n                size: size,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 27\n                }\n              });\n            }\n          },\n          component: this.ListStackScreen.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }\n        })));\n      }\n    }\n  }]);\n\n  return Mainmenu;\n}(Component);\n\nexport default Mainmenu;","map":{"version":3,"sources":["D:/Freelancer-Api/component/Mainmenu.js"],"names":["React","Component","NavigationContainer","DefaultTheme","createBottomTabNavigator","createStackNavigator","MaterialCommunityIcons","App","ListCon","Icon","Tab","Stack","Mainmenu","props","state","disconnect","headerTitleAlign","headerRight","setState","headerStatusBarHeight","headerStyle","backgroundColor","headerTransparent","tabBarLabel","tabBarIcon","color","size","ListStackScreen","bind"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,0BAAlD;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,OAAOC,GAAP;AACA,OAAOC,OAAP;AACA,SAASC,IAAT,QAAqB,aAArB;AAGA,IAAMC,GAAG,GAAGN,wBAAwB,EAApC;AACA,IAAMO,KAAK,GAAGN,oBAAoB,EAAlC;;IAEMO,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAG;AADJ,KAAb;AAFe;AAKlB;;;;sCAEiB;AAAA;;AACd,aACI,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEP,OAArC;AAA8C,QAAA,OAAO,EAAE;AACnDQ,UAAAA,gBAAgB,EAAE,QADiC;AAEnDC,UAAAA,WAAW,EAAE;AAAA,mBACT,oBAAC,IAAD;AAAM,cAAA,IAAI,EAAC,YAAX;AAAwB,cAAA,OAAO,EAAE,mBAAM;AAAC,gBAAA,MAAI,CAACC,QAAL,CAAc;AAACH,kBAAAA,UAAU,EAAG;AAAd,iBAAd;AAAmC,eAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADS;AAAA,WAFsC;AAMnDI,UAAAA,qBAAqB,EAAE,CAN4B;AAOnDC,UAAAA,WAAW,EAAE;AACTC,YAAAA,eAAe,EAAE;AADR;AAPsC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAaI,oBAAC,KAAD,CAAO,MAAP;AAAe,QAAA,IAAI,EAAC,WAApB;AAAgC,QAAA,SAAS,EAAEd,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,CADJ;AAiBH;;;6BACM;AACP,UAAG,KAAKO,KAAL,CAAWC,UAAd,EAAyB;AACrB,eAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACL,OAFC,MAGF;AACA,eACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD,CAAK,SAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD,CAAK,MAAL;AACI,UAAA,IAAI,EAAE,MADV;AAEI,UAAA,OAAO,EAAE;AACLO,YAAAA,iBAAiB,EAAG,IADf;AAELC,YAAAA,WAAW,EAAE,MAFR;AAGLC,YAAAA,UAAU,EAAE;AAAA,kBAAGC,KAAH,QAAGA,KAAH;AAAA,kBAAUC,IAAV,QAAUA,IAAV;AAAA,qBACR,oBAAC,sBAAD;AAAwB,gBAAA,IAAI,EAAC,WAA7B;AAAyC,gBAAA,KAAK,EAAED,KAAhD;AAAuD,gBAAA,IAAI,EAAEC,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADQ;AAAA;AAHP,WAFb;AAQO,UAAA,SAAS,EAAE,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,CADJ;AAgBC;AACF;;;;EAjDsB3B,S;;AAoDvB,eAAeW,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport App from '../App';\r\nimport ListCon from './ListCon';\r\nimport { Icon } from 'native-base';\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nclass Mainmenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disconnect : false\r\n        }\r\n    }\r\n\r\n    ListStackScreen() {\r\n        return (\r\n            <Stack.Navigator>\r\n                <Stack.Screen name=\"List\" component={ListCon} options={{\r\n                    headerTitleAlign :'center',\r\n                    headerRight: () => (\r\n                        <Icon name=\"md-log-out\" onPress={() => {this.setState({disconnect : true})}} />\r\n                    ),\r\n                    \r\n                    headerStatusBarHeight: 5,\r\n                    headerStyle: {\r\n                        backgroundColor: '#041a48'\r\n                    }\r\n                }} />\r\n                \r\n                <Stack.Screen  name=\"Connexion\" component={App}/>\r\n            </Stack.Navigator>\r\n        )\r\n    }\r\n  render() {\r\n    if(this.state.disconnect){\r\n        return(<App/>)\r\n  }else\r\n  {\r\n  return (\r\n      <NavigationContainer >\r\n          <Tab.Navigator>\r\n              <Tab.Screen\r\n                  name={\"List\"}\r\n                  options={{\r\n                      headerTransparent : true,\r\n                      tabBarLabel: 'List',\r\n                      tabBarIcon: ({ color, size }) => (\r\n                          <MaterialCommunityIcons name=\"view-list\" color={color} size={size} />\r\n                      )\r\n                  }} component={this.ListStackScreen.bind(this)}\r\n              />\r\n              </Tab.Navigator>\r\n            </NavigationContainer>\r\n  );\r\n  }\r\n}\r\n}\r\n\r\nexport default Mainmenu;"]},"metadata":{},"sourceType":"module"}