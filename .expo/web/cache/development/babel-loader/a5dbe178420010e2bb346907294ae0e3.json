{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Freelancer-Api\\\\component\\\\ListCon.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text2 from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Container, Header, Content, Card, CardItem, Body, Text } from 'native-base';\nimport Axios from 'axios';\nimport { ScrollView, TextInput } from 'react-native-gesture-handler';\n\nvar ListCon = function (_Component) {\n  _inherits(ListCon, _Component);\n\n  var _super = _createSuper(ListCon);\n\n  function ListCon(props) {\n    var _this;\n\n    _classCallCheck(this, ListCon);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      search: ''\n    };\n    return _this;\n  }\n\n  _createClass(ListCon, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var value, data;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('data'));\n\n            case 2:\n              value = _context.sent;\n              data = JSON.parse(value);\n              Axios({\n                method: \"GET\",\n                url: \"https://api.fluxgen.in/aquagen/v1/industries/\" + data.data.industry_id + \"/consumption/latest\",\n                headers: {\n                  \"Authorization\": data.data.token\n                }\n              }).then(function (res) {\n                return res.data;\n              }).then(function (res) {\n                _this2.setState({\n                  data: res.data\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var data = this.state.data;\n\n      if (data.units && data.units.length) {\n        var list = [];\n        Object.values(data.units).map(function (value) {\n          Object.entries(value).map(function (item, key) {\n            list.push(item);\n          });\n        });\n        return React.createElement(ImageBackground, {\n          source: require(\"../assets/background.jpeg\"),\n          style: {\n            flex: 1,\n            width: null,\n            height: null\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.firstBox,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }\n        }, React.createElement(Text2, {\n          style: {\n            textAlign: 'center',\n            fontSize: 25,\n            color: \"#EBEBEB\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }\n        }, \"Consumption: \", data.total_consumption / 1000, \" kl\"), React.createElement(Text2, {\n          style: {\n            textAlign: 'center',\n            fontSize: 20,\n            color: \"#CFCFCF\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }\n        }, \"Cost: \\u20B9 \", data.total_cost)), React.createElement(ScrollView, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }\n        }, Object.values(list).map(function (item, key) {\n          if (item[1].unit_name.toUpperCase().includes(_this3.state.search.toUpperCase()) || _this3.state.search === '') {\n            return React.createElement(View, {\n              key: key,\n              style: {\n                backgroundColor: '#FFFFFF',\n                borderRadius: 15,\n                margin: 15,\n                shadowOpacity: 1,\n                shadowRadius: 15\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }\n            }, React.createElement(Text, {\n              style: {\n                marginLeft: 15,\n                textDecorationStyle: 'solid',\n                marginBottom: 15,\n                marginTop: 15\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 41\n              }\n            }, item[1].unit_name), React.createElement(View, {\n              style: {\n                borderBottomColor: '#2C2B2B',\n                borderWidth: 2,\n                borderBottomWidth: StyleSheet.hairlineWidth\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 41\n              }\n            }), React.createElement(View, {\n              style: {\n                flexDirection: 'row',\n                margin: 10\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }\n            }, React.createElement(View, {\n              style: {\n                flexDirection: 'column'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 45\n              }\n            }, React.createElement(Text, {\n              style: styles.texttitle,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 49\n              }\n            }, \"Consumption\"), React.createElement(Text, {\n              style: styles.textvalue,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 49\n              }\n            }, item[1].consumption / 1000, \" kl\"), React.createElement(Text, {\n              style: styles.texttitle,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 49\n              }\n            }, \"Cost\"), React.createElement(Text, {\n              style: styles.textvalue,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 49\n              }\n            }, \"\\u20B9 \", item[1].cost)), React.createElement(View, {\n              style: {\n                flexDirection: 'column'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 45\n              }\n            }, React.createElement(Text, {\n              style: styles.texttitle,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 49\n              }\n            }, \"Process \"), React.createElement(Text, {\n              style: styles.textvalue,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 49\n              }\n            }, item[1].process_consumption), React.createElement(Text, {\n              style: styles.texttitle,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 49\n              }\n            }, \"Unit id\"), React.createElement(Text, {\n              style: styles.textvalue,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 49\n              }\n            }, item[1].unit_id))));\n          }\n        }))));\n      } else {\n        return React.createElement(ImageBackground, {\n          source: require(\"../assets/loading.gif\"),\n          style: {\n            width: null,\n            height: null\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }\n        });\n      }\n    }\n  }]);\n\n  return ListCon;\n}(Component);\n\nvar styles = StyleSheet.create({\n  textvalue: {\n    marginLeft: 5,\n    textDecorationStyle: 'solid'\n  },\n  texttitle: {\n    color: '#CDCDCD',\n    textDecorationStyle: 'solid',\n    margin: 5\n  },\n  container: {\n    marginTop: 10,\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontFamily: 'Arial'\n  },\n  firstBox: {\n    flex: 1,\n    width: '80%',\n    marginBottom: 25,\n    height: '20%',\n    shadowColor: '#000000'\n  },\n  secondBox: {\n    width: '80%',\n    borderRadius: 20,\n    opacity: 0.8,\n    height: '80%',\n    backgroundColor: \"#CDCDCD\"\n  },\n  innerBox: {\n    flex: 1,\n    alignContent: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    borderRadius: 20,\n    borderWidth: 1,\n    margin: 15\n  }\n});\nexport default ListCon;","map":{"version":3,"sources":["D:/Freelancer-Api/component/ListCon.js"],"names":["React","Component","Container","Header","Content","Card","CardItem","Body","Text","Axios","ScrollView","TextInput","ListCon","props","state","data","search","AsyncStorage","getItem","value","JSON","parse","method","url","industry_id","headers","token","then","res","setState","units","length","list","Object","values","map","entries","item","key","push","require","flex","width","height","styles","container","firstBox","textAlign","fontSize","color","total_consumption","total_cost","unit_name","toUpperCase","includes","backgroundColor","borderRadius","margin","shadowOpacity","shadowRadius","marginLeft","textDecorationStyle","marginBottom","marginTop","borderBottomColor","borderWidth","borderBottomWidth","StyleSheet","hairlineWidth","flexDirection","texttitle","textvalue","consumption","cost","process_consumption","unit_id","create","alignItems","justifyContent","fontFamily","shadowColor","secondBox","opacity","innerBox","alignContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, AsyncStorage, StyleSheet, Text as Text2, ImageBackground } from 'react-native';\r\nimport { Container, Header, Content, Card, CardItem, Body, Text } from 'native-base';\r\nimport Axios from 'axios';\r\nimport { ScrollView, TextInput } from 'react-native-gesture-handler';\r\n\r\n\r\n\r\nclass ListCon extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            search : ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const value = await AsyncStorage.getItem('data');\r\n        const data = JSON.parse(value);\r\n        Axios({\r\n            method: \"GET\",\r\n            url: \"https://api.fluxgen.in/aquagen/v1/industries/\" + data.data.industry_id + \"/consumption/latest\",\r\n            headers: {\r\n                \"Authorization\": data.data.token\r\n            }\r\n        }).then(res => res.data).then(res => {\r\n            this.setState({ data: res.data });\r\n        });\r\n    }\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    if (data.units && data.units.length) {\r\n        var list = []\r\n        Object.values(data.units).map((value) => {\r\n            Object.entries(value).map((item, key) => {\r\n                list.push(item)\r\n            })\r\n        })\r\n        return (\r\n            <ImageBackground source={require('../assets/background.jpeg')} style={{ flex: 1, width: null, height: null }}>\r\n                <View style={styles.container}>\r\n                    <View style={styles.firstBox}>\r\n                        <Text2 style={{ textAlign: 'center', fontSize: 25, color: \"#EBEBEB\" }}>Consumption: {data.total_consumption/1000} kl</Text2>\r\n                        <Text2 style={{ textAlign: 'center', fontSize: 20, color: \"#CFCFCF\" }}>Cost: ₹ {data.total_cost}</Text2>\r\n                    </View>\r\n                    <ScrollView >\r\n                        {\r\n                            Object.values(list).map((item, key) => {\r\n                                if(item[1].unit_name.toUpperCase().includes(this.state.search.toUpperCase()) || this.state.search === '')\r\n                                {\r\n\r\n                                return (\r\n                                    <View key={key} style={{ backgroundColor: '#FFFFFF', borderRadius: 15, margin: 15, shadowOpacity: 1, shadowRadius: 15 }}>\r\n                                        <Text style={{ marginLeft: 15, textDecorationStyle: 'solid', marginBottom: 15, marginTop: 15 }}>{item[1].unit_name}</Text>\r\n                                        <View \r\n                                            style={{\r\n                                                borderBottomColor: '#2C2B2B',\r\n                                                borderWidth: 2,\r\n                                                borderBottomWidth: StyleSheet.hairlineWidth,\r\n                                            }}\r\n                                        />\r\n                                        <View style={{ flexDirection: 'row', margin: 10 }}>\r\n                                            <View style={{ flexDirection: 'column' }}>\r\n\r\n                                                <Text style={styles.texttitle}   >Consumption</Text>\r\n                                                <Text style={styles.textvalue}>\r\n                                                    {item[1].consumption/1000} kl\r\n                                                </Text>\r\n\r\n                                                <Text style={styles.texttitle} >Cost</Text>\r\n                                                <Text style={styles.textvalue}>\r\n                                                ₹ {item[1].cost} \r\n                                                </Text>\r\n\r\n\r\n                                               \r\n                                            </View>\r\n                                            <View style={{ flexDirection: 'column' }}>\r\n\r\n\r\n                                                <Text style={styles.texttitle} >Process </Text>\r\n                                                <Text style={styles.textvalue}>\r\n                                                    {item[1].process_consumption}\r\n                                                </Text>\r\n\r\n                                            \r\n\r\n                                                <Text style={styles.texttitle} >Unit id</Text>\r\n                                                <Text style={styles.textvalue}>\r\n                                                    {item[1].unit_id}\r\n                                                </Text>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n                                )\r\n                                        }\r\n                            })\r\n                            \r\n                        }\r\n                    </ScrollView>\r\n                </View>\r\n            </ImageBackground>\r\n               );\r\n            } else {\r\n                return (<ImageBackground source={require('../assets/loading.gif')} style={{ width: null, height: null }} />)\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n     }\r\n\r\n\r\n\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    textvalue: {\r\n    marginLeft: 5,\r\n    textDecorationStyle: 'solid'\r\n    },\r\n    texttitle: {\r\n    color: '#CDCDCD', textDecorationStyle: 'solid', margin: 5\r\n    },\r\n    container: {\r\n    marginTop: 10,\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontFamily : 'Arial'\r\n    },\r\n    firstBox: {\r\n    flex: 1,\r\n    width: '80%',\r\n    marginBottom: 25,\r\n    height: '20%',\r\n    shadowColor: '#000000'\r\n    },\r\n    secondBox: {\r\n    width: '80%',\r\n    borderRadius: 20,\r\n    opacity : 0.8,\r\n    height: '80%',\r\n    backgroundColor: \"#CDCDCD\"\r\n    },\r\n    innerBox: {\r\n    flex: 1,\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n    borderRadius: 20,\r\n    borderWidth: 1,\r\n    margin: 15\r\n    }\r\n    });\r\nexport default ListCon;"]},"metadata":{},"sourceType":"module"}